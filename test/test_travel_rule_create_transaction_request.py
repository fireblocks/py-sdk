# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.travel_rule_create_transaction_request import (
    TravelRuleCreateTransactionRequest,
)


class TestTravelRuleCreateTransactionRequest(unittest.TestCase):
    """TravelRuleCreateTransactionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TravelRuleCreateTransactionRequest:
        """Test TravelRuleCreateTransactionRequest
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TravelRuleCreateTransactionRequest`
        """
        model = TravelRuleCreateTransactionRequest()
        if include_optional:
            return TravelRuleCreateTransactionRequest(
                originator_vas_pdid = '',
                beneficiary_vas_pdid = '',
                originator_vas_pname = '',
                beneficiary_vas_pname = '',
                transaction_blockchain_info = fireblocks.models.travel_rule_transaction_blockchain_info.TravelRuleTransactionBlockchainInfo(
                    tx_hash = '', 
                    origin = '', 
                    destination = '', ),
                originator = fireblocks.models.travel_rule_pii_ivms.TravelRulePiiIVMS(
                    originator_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    beneficiary_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    account_number = [
                        ''
                        ], ),
                beneficiary = fireblocks.models.travel_rule_pii_ivms.TravelRulePiiIVMS(
                    originator_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    beneficiary_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    account_number = [
                        ''
                        ], ),
                encrypted = '',
                protocol = '',
                skip_beneficiary_data_validation = True,
                travel_rule_behavior = True,
                originator_ref = '',
                beneficiary_ref = '',
                travel_rule_behavior_ref = '',
                originator_proof = fireblocks.models.travel_rule_ownership_proof.TravelRuleOwnershipProof(
                    type = 'passport', 
                    proof = '123456789', ),
                beneficiary_proof = fireblocks.models.travel_rule_ownership_proof.TravelRuleOwnershipProof(
                    type = 'passport', 
                    proof = '123456789', ),
                beneficiary_did = '',
                originator_did = '',
                is_non_custodial = True
            )
        else:
            return TravelRuleCreateTransactionRequest(
                originator = fireblocks.models.travel_rule_pii_ivms.TravelRulePiiIVMS(
                    originator_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    beneficiary_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    account_number = [
                        ''
                        ], ),
                beneficiary = fireblocks.models.travel_rule_pii_ivms.TravelRulePiiIVMS(
                    originator_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    beneficiary_persons = [
                        fireblocks.models.travel_rule_persons.TravelRulePersons()
                        ], 
                    account_number = [
                        ''
                        ], ),
        )
        """

    def testTravelRuleCreateTransactionRequest(self):
        """Test TravelRuleCreateTransactionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
